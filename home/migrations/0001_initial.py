# Generated by Django 5.2.3 on 2025-06-11 13:16

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='agenda',
            fields=[
                ('agenda', models.IntegerField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('horarioInicio', models.TimeField()),
                ('horarioEncerramento', models.TimeField()),
                ('disponivel', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='cliente',
            fields=[
                ('id_cliente', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='estudio',
            fields=[
                ('estudio', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=255)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=50)),
                ('numero', models.CharField(max_length=20)),
                ('telefone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('horarioFuncionamento', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='PortfolioTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='usuario',
            fields=[
                ('usuario', models.IntegerField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=255)),
                ('senha', models.IntegerField()),
                ('apelido', models.CharField(max_length=100, null=True)),
                ('data_cadastro', models.DateField()),
                ('nascimento', models.DateField()),
                ('telefone', models.IntegerField()),
                ('is_client', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='tatuador',
            fields=[
                ('tatuador', models.IntegerField(primary_key=True, serialize=False)),
                ('owner', models.BooleanField(default=False)),
                ('estudio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.estudio', verbose_name='idEstudio')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.usuario', verbose_name='idCliente')),
            ],
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=100)),
                ('descricao', models.TextField(blank=True)),
                ('tatuador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='home.tatuador')),
            ],
        ),
        migrations.CreateModel(
            name='agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('canceled', 'Canceled')], default='pendente', max_length=20)),
                ('data_agendamento', models.DateTimeField(auto_now_add=True)),
                ('mensagem', models.TextField(blank=True)),
                ('agenda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment', to='home.agenda')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='home.cliente')),
                ('estudio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.estudio', verbose_name='')),
                ('tatuador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamento', to='home.tatuador')),
            ],
        ),
        migrations.AddField(
            model_name='agenda',
            name='tatuador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agenda', to='home.tatuador'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='id_usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.usuario', verbose_name='idTatuador'),
        ),
        migrations.AlterUniqueTogether(
            name='agenda',
            unique_together={('tatuador', 'data', 'horarioInicio')},
        ),
    ]
